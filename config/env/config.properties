#  This file contaians app related queries, dbConfig and details 
[app]
appName = hospital-management
port = 3000
jwtSecretKey = mykey
jwtExpiryTime = 3h
openApiPath = ./.openapi/openapi.docs.yaml

[db]
pgsql.dialect = postgres
pgsql.host = localhost
pgsql.port = 5432
pgsql.username = postgres
pgsql.password = root
pgsql.database = hospital-management

[query]
get_userbyemail = select  user_id, first_name, last_name, email, password, mobile_number from healthcare_management.users where email = :email;
post_newuser=INSERT INTO healthcare_management.users (first_name, last_name, email, password, mobile_number) VALUES (:first_name, :last_name, :email, :password, :mobile_number);
post_newemployee = INSERT INTO healthcare_management.employees(password,first_name,last_name,email,role,is_first_password,mobile_number) VALUES(:password, :first_name, :last_name, :email, :role, :is_first_password, :mobile_number);
get_employee_email = SELECT employee_id, password, email, first_name, last_name, is_first_password, mobile_number, role FROM healthcare_management.employees WHERE email = :email OR mobile_number = :mobile_number;
get_doctors=SELECT doctor_id,name,email,specialization,mobile_number, dob, EXTRACT(YEAR FROM AGE(dob)) AS age, password FROM healthcare_management.doctor WHERE email = :email or mobile_number = :mobile_number;
post_doctor= INSERT INTO healthcare_management.doctor (name, dob, email, specialization, mobile_number, password, created_by, created_date) VALUES (:name, :dob, :email, :specialization, :mobile_number, :password, :created_by, CURRENT_TIMESTAMP)
get_all_doctors = SELECT doctor_id,name,email,specialization,mobile_number, dob, EXTRACT(YEAR FROM AGE(dob)) AS age FROM healthcare_management.doctor;
get_doctor_by_id = SELECT doctor_id,name,email,specialization,mobile_number, dob, EXTRACT(YEAR FROM AGE(dob)) AS age FROM healthcare_management.doctor WHERE doctor_id = :doctor_id;
get_avilable_slots_by_doctor_id = SELECT slot_id, doctor_id, available_slots, booked_slots, slot_date, slot_time, slot_end_time, created_by, created_dt, updated_by, updated_dt FROM healthcare_management.slots WHERE doctor_id = :doctorId AND slot_date = CURRENT_DATE
post_slot = INSERT INTO healthcare_management.slots (doctor_id, available_slots, booked_slots, slot_date, slot_time, slot_end_time, created_by, created_dt) VALUES (:doctor_id, :available_slots, 0, :slot_date, :slot_time, :slot_end_time, :created_by, CURRENT_TIMESTAMP ) RETURNING slot_id;
check_slot_conflict = SELECT * FROM healthcare_management.slots WHERE doctor_id = :doctor_id AND slot_date = :slot_date AND (TIME :slot_time, TIME :slot_end_time) OVERLAPS (slot_time, slot_end_time)  
get_slots_by_id = SELECT doctor_id, available_slots, booked_slots, slot_date, slot_time, slot_end_time FROM healthcare_management.slots WHERE slot_id = :slot_id;
update_booked_slots = UPDATE healthcare_management.slots set booked_slots = :booked_slots WHERE slot_id = :slot_id;
post_appointment=INSERT INTO healthcare_management.appointments (user_id,name,mobile_number,email,slot_id,created_by,created_date, status, is_emergency, for_test) VALUES(:user_id,:name,:mobile_number,:email,:slot_id,:created_by,CURRENT_DATE, :status, :is_emergency, 'N') RETURNING appointment_id;
delete_appointement = DELETE FROM healthcare_management.appointments WHERE appointment_id = :appointment_id
get_appointments_for_user__currentdate = SELECT appointment_id, user_id, name, mobile_number, email, slot_id, created_by, created_date, status, is_emergency FROM healthcare_management.appointments WHERE mobile_number = :mobile_number or email = :email and created_date = CURRENT_DATE;
get_appointments_by_date = SELECT a.name as patient_name, a.appointment_id, a.mobile_number, a.email, a.status, a.is_emergency, a.slot_id, s.slot_date, s.slot_time, s.slot_end_time, d.doctor_id, d.name as doctor_name  FROM healthcare_management.appointments a JOIN healthcare_management.slots s on a.slot_id = s.slot_id JOIN healthcare_management.doctor d on d.doctor_id = s.doctor_id where a.created_date = :created_date  order by a.appointment_id asc
get_current_appointment_queue = SELECT * FROM healthcare_management.get_ranked_appointments(:doctor_id);

